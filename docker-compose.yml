name: musicpresence-client-proxy

networks:
  musicpresence_network:
    external: true

services:
  loon:
    build:
      context: ./vendor/loon
      dockerfile: build/package/Dockerfile
    restart: unless-stopped
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - musicpresence_network
  loon-clients:
    image: caddy:latest
    restart: unless-stopped
    env_file:
      - caddy-clients.env
    volumes:
      - ./caddy-clients.caddyfile:/etc/caddy/Caddyfile
      - caddy_data_clients:/data
      - caddy_config_clients:/config
    depends_on:
      - loon
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-clients
  pika:
    image: pikadb/pika:latest
    restart: unless-stopped
    volumes:
      - ./pika:/pika/conf
      - ./data/pika:/pika/log
      - ./data/pika/db:/pika/db
      - ./data/pika/dump:/pika/dump
      - ./data/pika/dbsync:/pika/dbsync
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_pika
    attach: false
  pika-healthcheck:
    image: goodsmileduck/redis-cli:latest
    restart: no
    depends_on:
      - pika
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "musicpresence-client-proxy_pika", "-p", "9221", "ping"]
      interval: 2s
      timeout: 2s
      retries: 15
    command: "sh -c 'while :; do sleep 2073600; done'"
    networks:
      - musicpresence_network
  pika-metrics:
    build:
      context: ./pika/metrics
      dockerfile: Dockerfile
      args:
        - PIKA_ADDR=musicpresence-client-proxy_pika:9221
    depends_on:
      pika-healthcheck:
        condition: service_healthy
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_pika-metrics
  loon-proxy:
    build:
      context: .
      dockerfile: caddy-with-cache.dockerfile
    restart: unless-stopped
    volumes:
      - ./caddy-proxy.caddyfile:/etc/caddy/Caddyfile
      - caddy_data_proxy:/data
      - caddy_config_proxy:/config
    depends_on:
      loon:
        condition: service_started
      pika-healthcheck:
        condition: service_healthy
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-proxy
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    user: ${USER:-0}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=365d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    depends_on:
      - loon-clients
      - loon-proxy
      - pika-metrics
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-prometheus
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    user: ${USER:-0}
    environment:
      - GF_SERVER_ROOT_URL=https://metrics.proxy.musicpresence.io/v0
      - GF_SECURITY_ADMIN_USER=musicpresence-proxy-admin
      - GF_SECURITY_ADMIN_PASSWORD=uFwVBGMZKpbLNbcYWyxy
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_grafana

volumes:
  caddy_data_clients:
  caddy_config_clients:
  caddy_data_proxy:
  caddy_config_proxy:
