name: musicpresence-client-proxy

networks:
  musicpresence_network:
    external: true

services:
  loon:
    build:
      context: ./vendor/loon
      dockerfile: build/package/Dockerfile
    restart: unless-stopped
    volumes:
      - ./config.yaml:/app/config.yaml:ro
    networks:
      - musicpresence_network
  loon-clients:
    image: caddy:latest
    restart: unless-stopped
    env_file:
      - caddy-clients.env
    volumes:
      - ./caddy-clients.caddyfile:/etc/caddy/Caddyfile
      - caddy_data_clients:/data
      - caddy_config_clients:/config
    depends_on:
      - loon
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-clients
  redis:
    image: redis:latest
    restart: unless-stopped
    command: ["redis-server", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_redis
  redis-metrics:
    image: oliver006/redis_exporter:latest
    command:
      - '--redis.addr=redis://musicpresence-client-proxy_redis:6379'
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_redis-metrics
    depends_on:
      - redis
  redis-expire-mapping-keys:
    build:
      context: ./redis/expire-mapping-keys
      dockerfile: Dockerfile
    depends_on:
      - redis
    networks:
      - musicpresence_network
    environment:
      - REDIS_HOST=musicpresence-client-proxy_redis
      - REDIS_PORT=6379
      - DESIRED_EXPIRE=60
      - DESIRED_INVERVAL=30
  loon-proxy:
    build:
      context: .
      dockerfile: caddy-with-cache.dockerfile
    restart: unless-stopped
    volumes:
      - ./caddy-proxy.caddyfile:/etc/caddy/Caddyfile
      - caddy_data_proxy:/data
      - caddy_config_proxy:/config
    depends_on:
      - loon
      - redis
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-proxy
  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    user: ${USER:-0}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=365d'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus:/prometheus
    depends_on:
      - loon-clients
      - loon-proxy
      - redis-metrics
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_loon-prometheus
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    user: ${USER:-0}
    env_file:
      - grafana.env
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./data/grafana:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - musicpresence_network
    hostname: ${COMPOSE_PROJECT_NAME}_grafana

volumes:
  caddy_data_clients:
  caddy_config_clients:
  caddy_data_proxy:
  caddy_config_proxy:
